---
import Logo from "./components/Logo.astro";
import DesktopMenu from "./components/DesktopMenu.astro";
import MobileMenu from "./components/MobileMenu.astro";
import ButtonTheme from "./components/ButtonTheme.astro";
import ButtonMenuToggle from "./components/ButtonMenuToggle.astro";
---
<header>
    <nav class="container mx-auto py-4 flex justify-between items-center max-w-6xl">
        <Logo />
        <!-- Desktop Navigation -->
        <DesktopMenu />
        <!-- Theme Toggle & Mobile Menu -->
        <div class="flex items-center space-x-4">
            <ButtonTheme />
            <!-- Mobile Menu Button -->
            <ButtonMenuToggle />
        </div>
    </nav>    
    <!-- Mobile Navigation -->
    <MobileMenu />
</header>
<script>
    import { mobileMenuToggle } from './components/MobileMenu.astro';

    function initTheme(el: HTMLElement) {

        const savedTheme = localStorage.getItem('theme');
        const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
      
        if (savedTheme === 'dark' || (!savedTheme && systemPrefersDark)) {
            el.classList.add('dark');
        }
    }

    function initScrollAnimations() {
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
            if (entry.isIntersecting) {
                const target = entry.target as HTMLElement;
                target.style.opacity = '1';
                target.style.transform = 'translateY(0)';
            }
            });
        }, observerOptions);

        // Observe sections for scroll animations
        document.querySelectorAll('section').forEach(section => {
            if (!section.classList.contains('animate-fade-in')) {
            section.style.opacity = '0';
            section.style.transform = 'translateY(30px)';
            section.style.transition = 'opacity 0.8s ease-out, transform 0.8s ease-out';
            observer.observe(section);
            }
        });

        // Observe cards and other elements
        document.querySelectorAll('.group').forEach(element => {
            observer.observe(element);
        });
    }

    function toggleTheme(el: HTMLElement) {
        const isDark = el.classList.toggle('dark');
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
    }

    document.addEventListener('DOMContentLoaded', () => {
        const html = document.documentElement;
        initTheme(html);
        initScrollAnimations();
        
        const themeToggleBtn = document.getElementById('theme-toggle');
        const mobileMenuToggleEl = document.getElementById('mobile-menu-toggle');

        if (themeToggleBtn) {
            themeToggleBtn.addEventListener('click', (e) => {
                e.preventDefault();
                toggleTheme(html);
            });
        }

        if (mobileMenuToggleEl) {
            mobileMenuToggleEl.addEventListener('click', (e) => {
                
                const mobileMenu = document.getElementById('mobile-menu') as HTMLElement;
                mobileMenu?.classList.toggle('hidden');
                mobileMenuToggle(mobileMenu);
            });
        }
    }, { once: false });
</script>